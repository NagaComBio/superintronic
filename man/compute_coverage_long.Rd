% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coverage-long.R
\name{compute_coverage_long}
\alias{compute_coverage_long}
\title{Compute long-form coverage as a GRanges object}
\usage{
compute_coverage_long(spec, source, ...)
}
\arguments{
\item{spec}{a `data.frame` containing an experimental design}

\item{source}{a column in the data identifying the name of BAM files}

\item{.target}{an optional GRanges object (default = NULL) to compute coverage
over a region (requires the BAM file to be indexed).}

\item{.genome_info}{a GRanges object containing reference annotation (default = NULL)}

\item{.drop_empty}{Filter ranges if they have zero coverage over an entire contig/chromosome (default TRUE)}

\item{.parallel}{a BiocParallel object (default = `BiocParallel::bpparam()`)}
}
\value{
a GRanges object
}
\description{
Compute long-form coverage as a GRanges object
}
\details{
This function computes coverage as a GRanges object, with
a `source` column containing the name of the input BAM file(s), and a
`score` column containing the coverage score. 

The `.genome_info` argument takes a GRanges object containing 
contig/chromosome information. If supplied the resulting GRanges will be 
properly annotated with a `seqinfo` slot. This is important for ensure the
integrity of any downstream overlap operations.
}
